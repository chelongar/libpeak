/*
 * Copyright (c) 2012-2014 Franco Fichtner <franco@packetwerk.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef PEAK_LOCATE_H
#define PEAK_LOCATE_H

/*
 * Begin of autogenerated section.  DO NOT EDIT.
 */

struct locate_item {
	unsigned int guid;
	const char *name;
	const char *desc;
};

enum {
	LOCATE_UNKNOWN = 0U,
	LOCATE_AD,
	LOCATE_AE,
	LOCATE_AF,
	LOCATE_AG,
	LOCATE_AI,
	LOCATE_AL,
	LOCATE_AM,
	LOCATE_AO,
	LOCATE_AQ,
	LOCATE_AR,
	LOCATE_AS,
	LOCATE_AT,
	LOCATE_AU,
	LOCATE_AW,
	LOCATE_AX,
	LOCATE_AZ,
	LOCATE_BA,
	LOCATE_BB,
	LOCATE_BD,
	LOCATE_BE,
	LOCATE_BF,
	LOCATE_BG,
	LOCATE_BH,
	LOCATE_BI,
	LOCATE_BJ,
	LOCATE_BL,
	LOCATE_BM,
	LOCATE_BN,
	LOCATE_BO,
	LOCATE_BQ,
	LOCATE_BR,
	LOCATE_BS,
	LOCATE_BT,
	LOCATE_BV,
	LOCATE_BW,
	LOCATE_BY,
	LOCATE_BZ,
	LOCATE_CA,
	LOCATE_CC,
	LOCATE_CD,
	LOCATE_CF,
	LOCATE_CG,
	LOCATE_CH,
	LOCATE_CI,
	LOCATE_CK,
	LOCATE_CL,
	LOCATE_CM,
	LOCATE_CN,
	LOCATE_CO,
	LOCATE_CR,
	LOCATE_CU,
	LOCATE_CV,
	LOCATE_CW,
	LOCATE_CX,
	LOCATE_CY,
	LOCATE_CZ,
	LOCATE_DE,
	LOCATE_DJ,
	LOCATE_DK,
	LOCATE_DM,
	LOCATE_DO,
	LOCATE_DZ,
	LOCATE_EC,
	LOCATE_EE,
	LOCATE_EG,
	LOCATE_EH,
	LOCATE_ER,
	LOCATE_ES,
	LOCATE_ET,
	LOCATE_FI,
	LOCATE_FJ,
	LOCATE_FK,
	LOCATE_FM,
	LOCATE_FO,
	LOCATE_FR,
	LOCATE_GA,
	LOCATE_GB,
	LOCATE_GD,
	LOCATE_GE,
	LOCATE_GF,
	LOCATE_GG,
	LOCATE_GH,
	LOCATE_GI,
	LOCATE_GL,
	LOCATE_GM,
	LOCATE_GN,
	LOCATE_GP,
	LOCATE_GQ,
	LOCATE_GR,
	LOCATE_GS,
	LOCATE_GT,
	LOCATE_GU,
	LOCATE_GW,
	LOCATE_GY,
	LOCATE_HK,
	LOCATE_HM,
	LOCATE_HN,
	LOCATE_HR,
	LOCATE_HT,
	LOCATE_HU,
	LOCATE_ID,
	LOCATE_IE,
	LOCATE_IL,
	LOCATE_IM,
	LOCATE_IN,
	LOCATE_IO,
	LOCATE_IQ,
	LOCATE_IR,
	LOCATE_IS,
	LOCATE_IT,
	LOCATE_JE,
	LOCATE_JM,
	LOCATE_JO,
	LOCATE_JP,
	LOCATE_KE,
	LOCATE_KG,
	LOCATE_KH,
	LOCATE_KI,
	LOCATE_KM,
	LOCATE_KN,
	LOCATE_KP,
	LOCATE_KR,
	LOCATE_KW,
	LOCATE_KY,
	LOCATE_KZ,
	LOCATE_LA,
	LOCATE_LB,
	LOCATE_LC,
	LOCATE_LI,
	LOCATE_LK,
	LOCATE_LR,
	LOCATE_LS,
	LOCATE_LT,
	LOCATE_LU,
	LOCATE_LV,
	LOCATE_LY,
	LOCATE_MA,
	LOCATE_MC,
	LOCATE_MD,
	LOCATE_ME,
	LOCATE_MF,
	LOCATE_MG,
	LOCATE_MH,
	LOCATE_MK,
	LOCATE_ML,
	LOCATE_MM,
	LOCATE_MN,
	LOCATE_MO,
	LOCATE_MP,
	LOCATE_MQ,
	LOCATE_MR,
	LOCATE_MS,
	LOCATE_MT,
	LOCATE_MU,
	LOCATE_MV,
	LOCATE_MW,
	LOCATE_MX,
	LOCATE_MY,
	LOCATE_MZ,
	LOCATE_NA,
	LOCATE_NC,
	LOCATE_NE,
	LOCATE_NF,
	LOCATE_NG,
	LOCATE_NI,
	LOCATE_NL,
	LOCATE_NO,
	LOCATE_NP,
	LOCATE_NR,
	LOCATE_NU,
	LOCATE_NZ,
	LOCATE_OM,
	LOCATE_PA,
	LOCATE_PE,
	LOCATE_PF,
	LOCATE_PG,
	LOCATE_PH,
	LOCATE_PK,
	LOCATE_PL,
	LOCATE_PM,
	LOCATE_PN,
	LOCATE_PR,
	LOCATE_PS,
	LOCATE_PT,
	LOCATE_PW,
	LOCATE_PY,
	LOCATE_QA,
	LOCATE_RE,
	LOCATE_RO,
	LOCATE_RS,
	LOCATE_RU,
	LOCATE_RW,
	LOCATE_SA,
	LOCATE_SB,
	LOCATE_SC,
	LOCATE_SD,
	LOCATE_SE,
	LOCATE_SG,
	LOCATE_SH,
	LOCATE_SI,
	LOCATE_SJ,
	LOCATE_SK,
	LOCATE_SL,
	LOCATE_SM,
	LOCATE_SN,
	LOCATE_SO,
	LOCATE_SR,
	LOCATE_SS,
	LOCATE_ST,
	LOCATE_SV,
	LOCATE_SX,
	LOCATE_SY,
	LOCATE_SZ,
	LOCATE_TC,
	LOCATE_TD,
	LOCATE_TF,
	LOCATE_TG,
	LOCATE_TH,
	LOCATE_TJ,
	LOCATE_TK,
	LOCATE_TL,
	LOCATE_TM,
	LOCATE_TN,
	LOCATE_TO,
	LOCATE_TR,
	LOCATE_TT,
	LOCATE_TV,
	LOCATE_TW,
	LOCATE_TZ,
	LOCATE_UA,
	LOCATE_UG,
	LOCATE_UM,
	LOCATE_US,
	LOCATE_UY,
	LOCATE_UZ,
	LOCATE_VA,
	LOCATE_VC,
	LOCATE_VE,
	LOCATE_VG,
	LOCATE_VI,
	LOCATE_VN,
	LOCATE_VU,
	LOCATE_WF,
	LOCATE_WS,
	LOCATE_XX,
	LOCATE_YE,
	LOCATE_YT,
	LOCATE_ZA,
	LOCATE_ZM,
	LOCATE_ZW,
	LOCATE_MAX	/* last element */
};

/*
 * End of autogenerated section. YOU MAY CONTINUE.
 */

#define LOCATE_MAGIC	0x10CA7E10CA7E7412ull
#define LOCATE_REVISION	1

struct peak_locate_hdr {
	uint64_t magic;
	uint32_t revision;
	uint32_t count;
};

struct peak_locate {
	struct netaddr min;
	struct netaddr max;
	uint32_t location;
	uint32_t reserved;
};

static inline int
peak_locate_cmp(const void *xx, const void *yy)
{
	const struct peak_locate *x = xx;
	const struct peak_locate *y = yy;

	if (netcmp(&x->max, &y->min) < 0) {
		return (-1);
	} else if (netcmp(&x->min, &y->max) > 0) {
		return (1);
	}

	return (0);
}

struct peak_locates	*peak_locate_init(const char *);
void			 peak_locate_exit(struct peak_locates *);
unsigned int		 peak_locate_get(struct peak_locates *,
			     const struct netaddr *);
unsigned int		 peak_locate_number(const char *);
const char		*peak_locate_name(const unsigned int);
const char		*peak_locate_desc(const unsigned int);

#endif /* !PEAK_LOCATE_H */
