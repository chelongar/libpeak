.Dd February 10, 2013
.Dt PEAK_ALLOC 3
.Os
.Sh NAME
.Nm calloc ,
.Nm free ,
.Nm malign ,
.Nm malloc ,
.Nm mcheck ,
.Nm realloc ,
.Nm reallocf ,
.Nm zalloc
.Nd memory allocation
.Sh SYNOPSIS
.Fd #include <peak.h>
.Ft void *
.Fn calloc "size_t count" "size_t size"
.Ft void
.Fn free "void *ptr"
.Ft void *
.Fn malign "size_t size"
.Ft void *
.Fn malloc "size_t size"
.Ft void
.Fn mcheck "void *ptr"
.Ft void *
.Fn realloc "void *ptr" "size_t size"
.Ft void *
.Fn reallocf "void *ptr" "size_t size"
.Ft void *
.Fn zalloc "size_t size"
.Sh DESCRIPTION
The
.Nm peak_alloc
functions allocate and deallocate memory.
They wrap around
.Xr malloc 3
and
.Xr free 3 ,
and provide better inline consistency checks.
They can detect simple buffer over- and underflows and also provide
on demand checks via the
.Fn mcheck
function.
.Pp
The
.Fn malloc
function allocates
.Va size
bytes of memory and returns a pointer to the allocated memory.
.Pp
The
.Fn malign
function allocates
.Va size
bytes of memory aligned to
.Dv ALLOC_CACHELINE
(64 bytes) and returns a pointer to the allocated memory.
It can be used to shield against cacheline bouncing, but you should
really know what you are doing.
In case you wonder, this function
wraps around
.Xr posix_memalign 3 .
.Pp
The
.Fn calloc
function contiguously allocates enough space for
.Va count
objects that are
.ra size
bytes of memory each and returns a pointer to the allocated memory.
The allocated memory is filled with bytes of value zero.
As a close friend, the
.Fn zalloc
function only takes the
.Va size
argument, but will also return a pointer to the allocated,
zero-filled memory.
.Pp
The
.Fn realloc
function tries to change the size of the allocation pointed to by
.na ptr
to
.Va size ,
and returns
.Va ptr .
If
.Va ptr
is
.Dv NULL ,
.Fn realloc
is identical to a call to
.Fn malloc
for
.Va size
bytes.
If
.Va size
is zero and
.Va ptr
is non-NULL, the behavior is identical to
.Fn free .
When extending a region allocated with
.Fn calloc ,
.Fn realloc
does not guarantee that the additional memory is also zero-filled
.Pp
The
.Fn reallocf
function is identical to the
.Fn realloc
function, except that it will free the passed pointer when the
requested memory cannot be allocated.
This was a FreeBSD specific API designed to ease the problems with
traditional coding styles for
.Fn realloc
causing memory leaks in libraries.
.Pp
The
.Fn free
function deallocates the memory allocation pointed to by
.Va ptr .
If
.Va ptr
is
.Dv NULL ,
no operation is performed.
.Pp
The
.Fn mcheck
function issues a process-wide panic message, when it is called on
an over- or underflown memory location pointed to by
.Va ptr .
.Sh RETURN VALUES
If successful,
.Fn calloc ,
.Fn malign ,
.Fn malloc ,
.Fn realloc ,
.Fn reallocf ,
and
.Fn zalloc
functions return a pointer to the allocated memory.
If there is an error, they return
.Dv NULL .
.Pp
For
.Fn realloc ,
the input pointer is still valid if reallocation failed.
For
.Fn reallocf ,
the input pointer will have been freed if reallocation failed.
.Pp
The
.Fn free
and
.Fn mcheck
functions do not return a value.
.Sh AUTHORS
.An "Franco Fichtner" Aq franco@lastsummer.de
