.\"
.\" Copyright (c) 2012-2014 Franco Fichtner <franco@packetwerk.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd October 19, 2014
.Dt PEAK_LOCATE 3
.Os
.Sh NAME
.Nm peak_locate_desc ,
.Nm peak_locate_exit ,
.Nm peak_locate_get ,
.Nm peak_locate_init ,
.Nm peak_locate_name ,
.Nm peak_locate_number
.Nd geolocate a network address
.Sh SYNOPSIS
.In peak.h
.Ft const char *
.Fn peak_locate_desc "const unsigned int number"
.Ft void
.Fn peak_locate_exit "struct peak_locates *self"
.Ft const char *
.Fn peak_locate_get "struct peak_locates *self" "const struct netaddr *me"
.Ft const char *
.Ft struct peak_locates *
.Fn peak_locate_init "const char *file"
.Fn peak_locate_name "const unsigned int number"
.Ft unsigned int
.Fn peak_locate_number "const char *name"
.Sh DESCRIPTION
The
.Nm peak_locate
API provides a mechanism to retrieve the geolocation of a network
address.
The database is provided via a binary set, which has been converted
from raw CSV files using
.Xr geoconv 1
earlier.
The library is thread-safe.
.Pp
The supplied binary set is sorted and holds a number of data sets.
This makes it possible to load the binary data as a whole and to
directly invoke a binary search.
To avoid mismatching ABI specifications from corrupting a running
system, each binary set is protected by a file header storing a
magic value, the ABI revision as well as the number of data sets in
the file.
The exposed data structures are:
.Bd -literal -offset indent
struct peak_locate_hdr {
	uint64_t magic;
	uint32_t revision;
	uint32_t count;
};

struct peak_locate {
	struct netaddr min;
	struct netaddr max;
	char location[8];
};
.Ed
.Pp
The
.Nm peak_locate
API can be initialised with
.Fn peak_locate_init .
The function takes the location of the binary file as an argument.
If the argument is
.Dv NULL ,
the default location database is loaded.
If a default database could not be found, an empty database is
returned.
Otherwise,
.Dv NULL
is returned.
.Pp
Retrieving a geolocation for a given
.Fa "struct netaddr *"
is as easy as calling
.Fn peak_locate_get .
Upon successful completion
.Fn peak_locate_get
returns an abbreviated country string, if the geolocation for the given
network address could be found.
Otherwise,
a pointer to the string
.Dq XX
is returned.
.Pp
A call to
.Fn peak_locate_exit
releases all internal references of the specified database.
.Pp
Given a valid location
.Va number ,
.Fn peak_locate_name
returns a pointer to the corresponding ISO 3166 country code, or
.Dv NULL
if the country code does not exist.
.Fn peak_locate_desc
will return a pointer to the unabbreviated country name in the same way.
.Pp
The function
.Fn peak_locate_number
will return the matching number to a given ISO 3166 country code
.Va name .
Otherwise,
.Dv LOCATE_UNKNOWN
is returned to indicate the country code is invalid.
.Sh FILES
.Bl -tag -width ".Pa /usr/local/var/peak/locate.bin" -compact
.It Pa /usr/local/var/peak/locate.bin
The default location of the geolocation database file.
.El
.Sh SEE ALSO
.Xr geoconv 1
.Sh AUTHORS
.An Franco Fichtner Aq Mt franco@packetwerk.com
