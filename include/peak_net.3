.\"
.\" Copyright (c) 2012 Franco Fichtner <franco@packetwerk.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd February 27, 2013
.Dt PEAK_NET 3
.Os
.Sh NAME
.Nm netmap4 ,
.Nm netmap6 ,
.Nm netcmp
.Nd coherent network address mapping
.Sh SYNOPSIS
.In peak.h
.Ft void
.Fn netmap4 "struct netmap *in4" "const uint32_t ip"
.Ft void
.Fn netmap6 "struct netmap *in6" "const void *ip"
.Ft int
.Fo netcmp
.Fa "const struct netmap *x"
.Fa "const struct netmap *y"
.Fc
.Sh DESCRIPTION
The
.Nm peak_net
functions provide support for coherent network address mapping
between IP version 4 and 6.
Regardless of its version, all of the created structures can be
compared without the caller worrying about the implications.
The internal mapping of IPv4 is implemented using the ::ffff:0:0/96
network as specified in Section 2.5.5.2 of RFC 4291.
.Pp
Both
.Fn netmap4
and
.Fn netmap6
convert the provided IPv4 or IPv6 network address into a given
.Vt struct netmap .
.Fn netcmp
then allows the caller to compare such structures against each
other.
.Sh RETURN VALUES
The
.Fn netcmp
function returns zero if the two addresses are identical.
If
.Va x
is less than
.Va y ,
the function returns <0.
Otherwise,
.Va x
is greater than
.Va y ,
which is indicated by a return value of >0.
.Sh AUTHORS
.An "Franco Fichtner" Aq Mt franco@packetwerk.com
