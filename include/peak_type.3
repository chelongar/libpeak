.\" Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>
.\" Copyright (c) 2012-2014 Franco Fichtner <franco@packetwerk.com>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD$
.\"
.Dd June 17, 2014
.Dt PEAK_TYPE 3
.Os
.Sh NAME
.Nm bswap16 ,
.Nm bswap32 ,
.Nm bswap64 ,
.Nm be16enc ,
.Nm be16dec ,
.Nm be32enc ,
.Nm be32dec ,
.Nm be64enc ,
.Nm be64dec ,
.Nm le16enc ,
.Nm le16dec ,
.Nm le32enc ,
.Nm le32dec ,
.Nm le64enc ,
.Nm le64dec
.Nd byte order operations
.Sh SYNOPSIS
.In peak.h
.Ft uint16_t
.Fn bswap16 "uint16_t u"
.Ft uint32_t
.Fn bswap32 "uint32_t u"
.Ft uint64_t
.Fn bswap64 "uint64_t u"
.Ft void
.Fn be16enc "void *pp" "const uint16_t u"
.Ft uint16_t
.Fn be16dec "const void *pp"
.Ft void
.Fn be32enc "void *pp" "const uint32_t u"
.Ft uint32_t
.Fn be32dec "const void *pp"
.Ft void
.Fn be64enc "void *pp" "const uint64_t u"
.Ft uint64_t
.Fn be64dec "const void *pp"
.Ft void
.Fn le16enc "void *pp" "const uint16_t u"
.Ft uint16_t
.Fn le16dec "const void *pp"
.Ft void
.Fn le32enc "void *pp" "const uint32_t u"
.Ft uint32_t
.Fn le32dec "const void *pp"
.Ft void
.Fn le64enc "void *pp" "const uint64_t u"
.Ft uint64_t
.Fn le64dec "const void *pp"
.Sh DESCRIPTION
The
.Fn bswap16 ,
.Fn bswap32 ,
and
.Fn bswap64
functions return a byte order swapped integer.
On big endian systems, the number is converted to little endian byte order.
On little endian systems, the number is converted to big endian byte order.
.Pp
The
.Fn be16enc ,
.Fn be16dec ,
.Fn be32enc ,
.Fn be32dec ,
.Fn be64enc ,
.Fn be64dec ,
.Fn le16enc ,
.Fn le16dec ,
.Fn le32enc ,
.Fn le32dec ,
.Fn le64enc ,
and
.Fn le64dec
functions encode and decode integers to/from byte strings on any alignment
in big/little endian format.
.Pp
On
.Nx
and
.Fx ,
the native
.Xr byteorder 9
implementation is used instead.
.Sh HISTORY
The encode/decode functions first appeared in
.Fx 5.1 .
