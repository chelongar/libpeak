.Dd May 7, 2013
.Dt PEAK_OUTPUT 3
.Os
.Sh NAME
.Nm output_init ,
.Nm output_log ,
.Nm output_bug ,
.Nm plog ,
.Nm pbug ,
.Nm pout ,
.Nm perr ,
.Nm pbacktrace ,
.Nm panic ,
.Nm alert ,
.Nm critical ,
.Nm error ,
.Nm warning ,
.Nm notice ,
.Nm info ,
.Nm debug
.Nd message output
.Sh SYNOPSIS
.In peak.h
.Fn output_init
.Fn output_log
.Fn output_bug
.Ft void
.Fn plog "int priority" "const char *message" "..."
.Ft void
.Fn pbug "int priority" "const char *message" "..."
.Ft void
.Fn pout "const char *message" "..."
.Ft void
.Fn perr "const char *message" "..."
.Ft void
.Fn pbacktrace "const int skip"
.Fn panic "MESSAGE" "..."
.Fn alert "MESSAGE" "..."
.Fn critical "MESSAGE" "..."
.Fn error "MESSAGE" "..."
.Fn warning "MESSAGE" "..."
.Fn notice "MESSAGE" "..."
.Fn info "MESSAGE" "..."
.Fn debug "MESSAGE" "..."
.Sh DESCRIPTION
The usage of the
.Xr printf 3
family of functions is generally discuraged when using this library.
Instead, the functions and macros presented hereby are meant as a
replacement to be used throughout the reader's code.
.Pp
The
.Fn output_init
macro initialises two global variables, which keep track of the maximum
output levels used for the process, to the lowest available level.
The level style is that of
.Xr syslog 3
and the currently selected level is increased by one each time
.Fn output_log
(log level) or
.Fn output_bug
(debug level) is called.
.Pp
The
.Fn plog
and
.Fn pbug
functions are modelled after the
.Xr syslog 3
prototype, and write output to
.Xr stdout 4
or
.Xr stderr 4 ,
respectively.
They both adhere to the process-wide output levels discussed earlier
and do not produce any overhead while expanding function parameters
in unreachable levels, because the functions are macro wrappers
internally.
On the other hand, the
.Fn pout
and
.Fn perr
functions provide raw access to
.Xr stdout 4
or
.Xr stderr 4 ,
respectively.
Additionally, debug output puts file and line numbers in front of the
message to be displayed, so it should not be used in production.
.Pp
The
.Fn pbacktrace
function attempts to print the current backtrace.
The
.Fa skip
argument can be either
.Dv BACKTRACE_NORMAL
for inline stack traces, or
.Dv BACKTRACE_SIGNAL
for signal handler stack traces.
Thus neglectable stack frames are omitted from the final backtrace.
The function is not available on
.Ox
or
.Fx .
.Pp
The following debug macros are used for the general convenience of
not having to select an explicit log level all the time.
The log level (from sparse to noisy) corresponds thus:
.Bl -tag -width "LOG_WARNING"
.It Dv LOG_EMERG
.Fn panic
-- includes a backtrace and
.Xr abort 3
.It Dv LOG_ALERT
.Fn alert
.It Dv LOG_CRIT
.Fn critical
.It Dv LOG_ERR
.Fn error
.It Dv LOG_WARNING
.Fn warning
.It Dv LOG_NOTICE
.Fn notice
.It Dv LOG_INFO
.Fn info
.It Dv LOG_DEBUG
.Fn debug
.El
.Sh SEE ALSO
.Xr abort 3 ,
.Xr printf 3 ,
.Xr syslog 3 ,
.Xr stderr 4 ,
.Xr stdout 4
.Sh AUTHOR
.An "Franco Fichtner" Aq franco@lastsummer.de
